
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

public class Main extends javax.swing.JFrame {

    /**
     * Creates new form CriadorDeGrupos
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelGetText = new javax.swing.JPanel();
        labImport = new javax.swing.JLabel();
        botImportar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        panelSpinner = new javax.swing.JPanel();
        labSelecionar = new javax.swing.JLabel();
        botGrupos = new javax.swing.JRadioButton();
        botAlunos = new javax.swing.JRadioButton();
        labSeparar = new javax.swing.JLabel();
        numSelecionado = new javax.swing.JSpinner();
        botSeparar = new javax.swing.JButton();
        labGruposSeparados = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaSeparada = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuImportar = new javax.swing.JMenuItem();
        menuSobre = new javax.swing.JMenu();
        menuCreditos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Criador de Grupos");

        panelGetText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelGetText.setToolTipText("");

        labImport.setText("Digite ou importe o conteúdo que você deseja separar");

        botImportar.setText("Importar");
        botImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botImportarActionPerformed(evt);
            }
        });

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        areaTexto.setToolTipText("");
        areaTexto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(areaTexto);

        javax.swing.GroupLayout panelGetTextLayout = new javax.swing.GroupLayout(panelGetText);
        panelGetText.setLayout(panelGetTextLayout);
        panelGetTextLayout.setHorizontalGroup(
            panelGetTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGetTextLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGetTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(panelGetTextLayout.createSequentialGroup()
                        .addComponent(labImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(botImportar)))
                .addContainerGap())
        );
        panelGetTextLayout.setVerticalGroup(
            panelGetTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGetTextLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGetTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botImportar)
                    .addComponent(labImport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelSpinner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labSelecionar.setText("Selecione o número de participantes/grupos");

        buttonGroup1.add(botGrupos);
        botGrupos.setText("Grupos");
        botGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botGruposActionPerformed(evt);
            }
        });

        buttonGroup1.add(botAlunos);
        botAlunos.setText("Alunos");
        botAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAlunosActionPerformed(evt);
            }
        });

        labSeparar.setText("Você deseja separar em Grupos ou Alunos?");

        numSelecionado.setModel(new javax.swing.SpinnerNumberModel(1, 1, 69, 1));
        numSelecionado.setEnabled(false);

        javax.swing.GroupLayout panelSpinnerLayout = new javax.swing.GroupLayout(panelSpinner);
        panelSpinner.setLayout(panelSpinnerLayout);
        panelSpinnerLayout.setHorizontalGroup(
            panelSpinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSpinnerLayout.createSequentialGroup()
                .addGroup(panelSpinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSpinnerLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(panelSpinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelSpinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSpinnerLayout.createSequentialGroup()
                                    .addComponent(botGrupos)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botAlunos))
                                .addComponent(labSelecionar))
                            .addComponent(labSeparar)))
                    .addGroup(panelSpinnerLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(numSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        panelSpinnerLayout.setVerticalGroup(
            panelSpinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSpinnerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labSeparar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelSpinnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botGrupos)
                    .addComponent(botAlunos))
                .addGap(18, 18, 18)
                .addComponent(labSelecionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(numSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        botSeparar.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        botSeparar.setText("SEPARAR");
        botSeparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSepararActionPerformed(evt);
            }
        });

        labGruposSeparados.setText("Grupos Separados");

        areaSeparada.setEditable(false);
        areaSeparada.setColumns(20);
        areaSeparada.setRows(5);
        areaSeparada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(areaSeparada);

        menuArquivo.setText("Arquivo");

        menuImportar.setText("Importar");
        menuImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuImportarActionPerformed(evt);
            }
        });
        menuArquivo.add(menuImportar);

        jMenuBar1.add(menuArquivo);

        menuSobre.setText("Sobre");
        menuSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSobreActionPerformed(evt);
            }
        });

        menuCreditos.setText("Créditos");
        menuCreditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCreditosActionPerformed(evt);
            }
        });
        menuSobre.add(menuCreditos);

        jMenuBar1.add(menuSobre);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelGetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(botSeparar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labGruposSeparados)
                .addGap(192, 192, 192))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labGruposSeparados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelGetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botSeparar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Getter para o JSpinner
    public int getValorJSpinner() {
        return (int) numSelecionado.getValue();
    }

    // Getter para a areaTexto
    public String getAreaTexto() {
        return areaTexto.getText();
    }

    // Getter para o botão botAlunos
    public boolean getBotAlunos() {
        return botAlunos.isSelected();
    }

    // Getter para o botão botGrupos
    public boolean getBotGrupos() {
        return botGrupos.isSelected();
    }

    private void menuCreditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCreditosActionPerformed

        JOptionPane.showMessageDialog(null,
                "Código do Criador de Grupos feito por João Fassina \n"
                + "Teste de Conhecimentos por meio da recriação de um exercicio proposto em 2023",
                "Créditos",
                JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_menuCreditosActionPerformed

    private void menuSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSobreActionPerformed
    }//GEN-LAST:event_menuSobreActionPerformed

    private void botGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botGruposActionPerformed

        if (this.botGrupos.isSelected()) {

            this.numSelecionado.setEnabled(rootPaneCheckingEnabled);

            this.numSelecionado.setEnabled(rootPaneCheckingEnabled);

            String nomes = this.areaTexto.getText();//pega os nomes da areaTexto
            String[] arrayNomes = nomes.split("\n");//splita as linhas

            int valorMax = arrayNomes.length / 2; //divide o tamanho da areaTexto para ser metade
            SpinnerNumberModel model = new SpinnerNumberModel(1, 1, valorMax, 1);//faz com que o valor do JSpinner não passe da metade dos nomes

            numSelecionado.setModel(model);
        }


    }//GEN-LAST:event_botGruposActionPerformed

    private void botAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAlunosActionPerformed

        if (this.botAlunos.isSelected()) {

            this.numSelecionado.setEnabled(rootPaneCheckingEnabled);

            this.numSelecionado.setEnabled(rootPaneCheckingEnabled);

            String nomes = this.areaTexto.getText();//pega os nomes da areaTexto
            String[] arrayNomes = nomes.split("\n");//splita as linhas

            int valorMax = arrayNomes.length / 2; //divide o tamanho da areaTexto para ser metade

            SpinnerNumberModel maximo = new SpinnerNumberModel(1, 1, valorMax, 1);//faz com que o valor do JSpinner não passe da metade dos nomes
            numSelecionado.setModel(maximo);
        }


    }//GEN-LAST:event_botAlunosActionPerformed

    private void botImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botImportarActionPerformed

        JFileChooser selecionarArquivo = new JFileChooser();
        selecionarArquivo.showOpenDialog(null);

        File arquivoSelecionado = selecionarArquivo.getSelectedFile();

        try {

            String conteudo = lerArquivo(arquivoSelecionado);

            this.areaTexto.setText(conteudo);

            JOptionPane.showMessageDialog(null, "Arquivo importado com sucesso! \n" + arquivoSelecionado.getAbsolutePath(), "Importação bem sucedida", JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException ex) {

            ex.printStackTrace();

        }

    }//GEN-LAST:event_botImportarActionPerformed

    private void botSepararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSepararActionPerformed

        int selecionado = Separador.getSeparador(this);

        switch (selecionado) {
            //Alunos
            case 1:

                JOptionPane.showMessageDialog(null,
                        "Método de Separação por Alunos Selecionado \n"
                        + "Separação executada com sucesso",
                        "Método de Separação Selecionado",
                        JOptionPane.INFORMATION_MESSAGE);

                SeparadorDeAlunos separador = new SeparadorDeAlunos();//chama do arquivo SeparadorDeAlunos
                ArrayList<String> lista = separador.separarAlunos();

                StringBuilder sb = new StringBuilder();

                for (String elemento : lista) {
                    sb.append(elemento).append("\n");

                }
                String resultado = sb.toString();

                areaSeparada.setText(resultado);

                break;

            //Grupos
            case 2:
                JOptionPane.showMessageDialog(null,
                        "Método de Separação por Grupos Selecionado \n"
                        + "Separação executada com sucesso",
                        "Método de Separação Selecionado",
                        JOptionPane.INFORMATION_MESSAGE);

                break;
            //Erro
            default:
                JOptionPane.showMessageDialog(null, "Selecione como deseja separar os Alunos",
                        "Erro Método de separação não selecionado",
                        JOptionPane.ERROR_MESSAGE);
                break;
        }


    }//GEN-LAST:event_botSepararActionPerformed

    private void menuImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuImportarActionPerformed

        JFileChooser selecionarArquivo = new JFileChooser();
        selecionarArquivo.showOpenDialog(null);

        File arquivoSelecionado = selecionarArquivo.getSelectedFile();

        try {

            String conteudo = lerArquivo(arquivoSelecionado);

            this.areaTexto.setText(conteudo);

            JOptionPane.showMessageDialog(null, "Arquivo importado com sucesso! \n" + arquivoSelecionado.getAbsolutePath(), "Importação bem sucedida", JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException ex) {

            ex.printStackTrace();

        }
    }//GEN-LAST:event_menuImportarActionPerformed

    private static String lerArquivo(File file) throws IOException {

        StringBuilder arquivo = new StringBuilder();

        try (BufferedReader leitor = new BufferedReader(new FileReader(file))) {

            String line;
            while ((line = leitor.readLine()) != null) {

                arquivo.append(line).append("\n");
            }

            return arquivo.toString();

        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaSeparada;
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JRadioButton botAlunos;
    private javax.swing.JRadioButton botGrupos;
    private javax.swing.JButton botImportar;
    private javax.swing.JButton botSeparar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labGruposSeparados;
    private javax.swing.JLabel labImport;
    private javax.swing.JLabel labSelecionar;
    private javax.swing.JLabel labSeparar;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuItem menuCreditos;
    private javax.swing.JMenuItem menuImportar;
    private javax.swing.JMenu menuSobre;
    private javax.swing.JSpinner numSelecionado;
    private javax.swing.JPanel panelGetText;
    private javax.swing.JPanel panelSpinner;
    // End of variables declaration//GEN-END:variables

}
